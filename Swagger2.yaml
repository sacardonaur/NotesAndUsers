swagger: '2.0'
info:
  version: ''
  title: NotesAndUser
  description: This API makes a notes and user model
host: 'localhost:8080'
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  '/notes/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      operationId: GET-note
      summary: Get Note
      tags:
        - Notes
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/note-output'
    put:
      operationId: PUT-note
      summary: Update Note
      tags:
        - Notes
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/note-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/note-output'
    delete:
      operationId: DELETE-note
      summary: Delete Note
      tags:
        - Notes
      responses:
        '204':
          description: ''
  /notes:
    get:
      operationId: LIST-notes
      summary: List Notes
      tags:
        - Notes
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/note-output'
    post:
      operationId: POST-note
      summary: Create Note
      tags:
        - Notes
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/note-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/note-output'
  '/users/{id}':
    parameters:
      - name: id
        in: path
        required: true
        type: string
    get:
      operationId: GET-user
      summary: Get User
      tags:
        - Users
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user-output'
    put:
      operationId: PUT-user
      summary: Update User
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/user-input'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/user-output'
    delete:
      operationId: DELETE-user
      summary: Delete User
      tags:
        - Users
      responses:
        '204':
          description: ''
  /users:
    get:
      operationId: LIST-users
      summary: List Users
      tags:
        - Users
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/user-output'
    post:
      operationId: POST-user
      summary: Create User
      tags:
        - Users
      parameters:
        - name: body
          in: body
          schema:
            $ref: '#/definitions/user-input'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/user-output'
definitions:
  note-input:
    title: Note Input
    type: object
    properties:
      user:
        type:
          - string
          - object
        required:
          - username
        properties:
          username:
            type: string
      text:
        type: string
      date:
        type: string
        format: date-time
    required:
      - user
      - text
      - date
  note-output:
    title: Note Output
    allOf:
      - type: object
        properties:
          id:
            type: string
        required:
          - id
      - $ref: '#/definitions/note-input'
  user-input:
    title: User Input
    type: object
    properties:
      username:
        type: string
    required:
      - username
  user-output:
    title: User Output
    allOf:
      - type: object
        properties:
          id:
            type: string
        required:
          - id
      - $ref: '#/definitions/user-input'
